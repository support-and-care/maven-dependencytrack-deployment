name: Deploy SBOMs to DependencyTrack

on:
  pull_request:
    branches: [ "main" ]

jobs:
  sbom:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Main Project
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Read Repository List
        id: read-repos
        run: |
          REPOS_JSON=$(jq -c '.' repos.json)
          echo "REPOS_JSON<<EOF" >> $GITHUB_ENV
          echo "$REPOS_JSON" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Clone, Generate, and Upload SBOMs
        env:
          DEPENDENCYTRACK_API_KEY: ${{ secrets.DEPENDENCYTRACK_API_KEY }}
        run: |
          echo "$REPOS_JSON" | jq -c '.[]' | while read -r repo; do
            repo_name=$(echo "$repo" | jq -r '.name')
            repo_url=$(echo "$repo" | jq -r '.url')

            echo "➡️ Cloning $repo_name from $repo_url"
            git clone "$repo_url" || continue
            cd "$repo_name" || continue

            echo "Generating SBOM for $repo_name"
            mvn org.cyclonedx:cyclonedx-maven-plugin:makeAggregateBom || true

            if [[ -f "target/bom.xml" ]]; then
              echo "Uploading SBOM for $repo_name"
              gh workflow run gh-upload-sbom.yml \
                --repo DependencyTrack/gh-upload-sbom \
                --ref v3 \
                -f serverHostname=api.dependencytrack.open-elements.cloud \
                -f apiKey=${DEPENDENCYTRACK_API_KEY} \
                -f projectName=${repo_name} \
                -f projectVersion=main \
                -f bomFilename=target/bom.xml \
                -f autoCreate=true || echo "Upload failed for $repo_name"
            else
              echo "⚠️ SBOM not found for $repo_name"
            fi

            cd ..
          done

      # Optional: Clean up cloned repos
      - name: Clean up workspace
        run: |
          echo "$REPOS_JSON" | jq -r '.[].name' | xargs rm -rf
